{
  "body": "In additional to https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/RedshiftforDynamoDB-zero-etl.html, this article provide a step-by-step guide on creating a cross account DynamoDB zero-ETL integration with Amazon Redshift with DynamoDB table\n\nReplace the following placeholders:\nDYNAMODB_ACCOUNT_ID: The AWS account ID where DynamoDB table is hosted\nREDSHIFT_ACCOUNT_ID: The AWS account ID where Redshift instance is hosted\nTABLE_NAME: The name of your DynamoDB table\nREGION: The aws region name of your DynamoDB table\nPrerequisites:\nA table is created under aws account DYNAMODB_ACCOUNT_ID\nA Redshift\nserverless namespace\nor\nprovisioned cluster\nis created under aws account REDSHIFT_ACCOUNT_ID\nThe DynamoDB table and Amazon Redshift cluster need to be in the same Region.\nThe source DynamoDB table must be encrypted with either an Amazon-owned or Customer-managed AWS KMS key. Amazon managed encryption is not supported for the source DynamoDB table.\nCreate cross account DynamoDB zero-ETL integration with Amazon Redshift with DynamoDB table\nEnsure point-in-time recovery (PITR) on your source DynamoDB table TABLE_NAME under account DYNAMODB_ACCOUNT_ID is enabled.\nIn the Amazon Redshift console under REDSHIFT_ACCOUNT_ID, go to serverless or provisioned clusters dashboard.\nChoose the serverless namespace or provisioned cluster, and go to the Resource Policy tab. Choose Add authorized principals, enter ARN below into the namespace and click Save changes.\narn:aws:iam::DYNAMODB_ACCOUNT_ID:root\nChoose Add authorized integration sources and specify the ARN of the source that's the data source for the zero-ETL integration. arn:aws:dynamodb:REGION:DYNAMODB_ACCOUNT_ID:table/TABLE_NAME\nIn the Amazon Redshift console under aws account DYNAMODB_ACCOUNT_ID , choose Zero-ETL integrations in the navigation pane.\nChoose Create DynamoDB integration. Enter a name for Integration name and choose Next.\nChoose Browse DynamoDB tables and choose the table that will be the source for this integration and choose Next. You can use the Fix it for me option during the create integration step to automatically apply the required resource policies to both DynamoDB and Amazon Redshift\nChoose your target Redshift data warehouse. When the target resides in a different account, you can provide the Amazon Resource Name (ARN) of the target Redshift cluster as below. Click Next to proceed.\nIf your table is encrypted with customer managed key, please follow steps below or skip this step otherwise. Click Next to proceed.\na. Choose the table\u2019s encryption key.\nb.  Add following key policy into your CMK key under KMS console. (Remember to replace DYNAMODB_ACCOUNT_ID and REGION variables with appropriate values in your policy)\n{\n    \"Sid\": \"Statement to allow Amazon Redshift service to perform Decrypt operation on the source DynamoDB Table\",\n    \"Effect\": \"Allow\",\n    \"Principal\": {\n        \"Service\": [\n            \"redshift.amazonaws.com\"\n        ]\n    },\n    \"Action\": \"kms:*\",\n    \"Resource\": \"*\",\n    \"Condition\": {\n        \"StringEquals\": {\n            \"aws:SourceAccount\": \"<DYNAMODB_ACCOUNT_ID>\"\n        },\n        \"ArnEquals\": {\n            \"aws:SourceArn\": \"arn:aws:redshift:<REGION>:<DYNAMODB_ACCOUNT_ID>:integration:*\"\n        }\n    }\n}\nClick on \u201cCreate DynamoDB integration\u201d to create zero-ETL integration.\nIn the Amazon Redshift console under aws account REDSHIFT_ACCOUNT_ID, choose Zero-ETL integrations in the navigation pane. Verify the DynamoDB zero-ETL integration with Amazon Redshift under \u201cFrom other accounts\u201d tab as shown in the following screenshot."
}