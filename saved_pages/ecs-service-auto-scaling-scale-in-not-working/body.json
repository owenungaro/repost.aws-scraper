{
  "body": "Hi,\nI've configured ECS cluster auto scaling and ECS service auto scaling and need some guidance with the service scaling behavior.\nCluster Auto Scaling Configuration:\nmanaged_scaling {\nmaximum_scaling_step_size = 1000\nminimum_scaling_step_size = 1\nstatus                    = \"ENABLED\"\ntarget_capacity           = 80\n}\nAuto Scaling Group (ASG):\nMin: 2\nMax: 4\nDesired: 2\nI've set up an ECS cluster with EC2 launch type using t3.medium instances. Each instance is running approximately 6 tasks. Cluster auto scaling is working well \u2014 it increases or decreases the instance count based on the target tracking policy.\nFor service deployment, I'm using strategies such as binpack based on CPU and memory.\nService Auto Scaling Configuration:\nMetric: ECSServiceAverageMemoryUtilization\nTarget value: 85%\nScale-out cooldown: 120 seconds\nScale-in cooldown: 180 seconds\nDisable scale-in: False\nASG for Service Auto Scaling:\nMin: 1\nMax: 2\nDesired: 1 (to be managed automatically based on target tracking)\nIssue:\nWith this configuration, the service scales out correctly when the memory utilization crosses the threshold. However, scale-in does not occur, even when the memory usage drops below the target and alarm status is IN alarm all the datapoints are satisfied. There are no logs or scaling activity indicating why scale-in is not triggered.\nI'm not sure what I'm missing or if this is a known issue. Has anyone faced a similar problem? Any guidance or documentation references would be greatly appreciated.\n\nThere are several potential reasons why your ECS service auto scaling is not scaling in despite the alarm being in the \"In Alarm\" state:\nSafety mechanism: Application Auto Scaling has a built-in safety feature that prevents scale-in actions if it calculates that removing a task would immediately cause the metric to exceed the target value again. With a small service (min: 1, max: 2), removing one task might push the memory utilization back over the 85% threshold, causing the system to avoid scaling in.\nCooldown periods: Your scale-in cooldown period is set to 180 seconds. Make sure enough time has passed since the last scaling activity before expecting a scale-in action.\nMetric calculation: The system might be determining that the current load, even though below the threshold, doesn't warrant removing a task based on its internal calculations of how that would affect the remaining infrastructure.\nTo troubleshoot and potentially resolve this issue:\nCheck scaling activities: Use the AWS CLI to check why scale-in didn't happen by reviewing the scaling activities, including activities that didn't result in scaling.\nConsider alternative scaling approaches: If target tracking isn't working as expected, you might need to:\nUse step scaling instead (though this may result in a less stable environment)\nChange the target tracking metric to one that better represents when scale-in is safe\nAdd another policy tracking a different metric while disabling scale-in on the memory policy\nReview your binpack strategy: Your deployment strategy using binpack for CPU and memory might be affecting how tasks are distributed, potentially making it harder for the system to determine when scale-in is appropriate.\nAdjust target capacity: Your cluster auto scaling target capacity is set to 80%, which might interact with your service scaling decisions. You might need to adjust this value to better align with your service scaling needs.\nSources\nAWS ECS EC2-backed auto scaling scale-in is not working | AWS re:Post\nOptimize Amazon ECS service auto scaling - Amazon Elastic Container Service\nAutomatically manage Amazon ECS capacity with cluster auto scaling - Amazon Elastic Container Service\n\nYou mentioned - \"However, scale-in does not occur, even when the memory usage drops below the target and alarm status is\nIN alarm\nall the datapoints are satisfied\". However, if the status is\nIN ALARM\n, it will not scale in as it still in alarm.\nDo you have the CPU/ memory metrics for the EC2 or only the ECS. It's possible the cpu/memory is still high even though the ECS has cooled down. Also, the scale in will take effect after the time specified."
}