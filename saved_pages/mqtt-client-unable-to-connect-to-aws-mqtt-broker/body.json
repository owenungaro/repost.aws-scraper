{
  "body": "I am currently working on integrating MQTT communication with AWS IoT Core and would appreciate your assistance with a connectivity issue.\nUsing an MQTT client application on my Linux PC ( Mosquitto ), I was able to successfully connect to AWS IoT Core and observe messages on the MQTT test client. This confirms that the endpoint and certificates are valid and functional.\nI used the same certificates and endpoint on my embedded device, but the device is unable to establish a connection with AWS IoT Core.\nFor all tests, I monitored logs using both CloudWatch and Device Advisor. When the device connects successfully, I can see detailed logs including event types and other relevant information. However, in the case of MQTT connection failures, I did not find any comprehensive logs or specific error messages indicating the reason for the failure.\nCould you please guide me on how to debug this issue? Are there any other way to check the failure logs with complete information in the AWS Console that can help identify why the connection from the embedded device is failing?\nI am happy to provide any additional information or logs if needed.\n\nYour device does not provide the\nclientId\nwhen connecting, while the clientId is visible in the Linux connection log.\nReview your firmware and add the\nclientId\nwhen you establish the MQTT connectivity.\n\nTo debug the MQTT connection issue with your embedded device, there are several steps you can take:\nVerify the endpoint: Double-check that you're using the correct AWS IoT Core endpoint. You can obtain this using the AWS CLI command: aws iot describe-endpoint --endpoint-type iot:Data-ATS. Ensure the endpoint includes \"-ats\" in the URL.\nCertificate and key verification: Confirm that the device certificate, private key, and root CA certificate are correctly configured on your embedded device. Make sure you're using the Amazon Root CA 1 certificate for AWS IoT Core.\nPolicy permissions: Review the IoT policy attached to your device certificate. It should allow iot:Connect, iot:Publish, iot:Subscribe, and iot:Receive for the required topics.\nTime synchronization: Ensure your embedded device has accurate time synchronization. TLS handshakes require correct time settings.\nTLS version: Verify that your embedded device supports and is configured to use TLS 1.2 or later, as required by AWS IoT Core.\nMemory and buffer sizes: Check if your embedded device has sufficient memory allocated for the MQTT client and TLS operations. Increase buffer sizes if necessary.\nNetwork stability: Verify the network connection on your embedded device is stable and can reach the AWS IoT Core endpoint.\nEnable verbose logging: If possible, enable more detailed logging on your embedded device's MQTT client library to get more information about the connection attempt.\nUse AWS Device Advisor: This tool can help diagnose connectivity issues between your device and AWS IoT Core by running specific tests.\nConsider MQTT over WebSocket: If you continue to face issues, try using MQTT over WebSocket (port 443) as it can bypass certain port restrictions.\nCheck SDK and dependencies: Ensure you're using the latest version of the AWS IoT Device SDK and that all dependencies are up to date.\nIf you still can't identify the issue, you may need to implement more granular error reporting in your embedded device code to pinpoint where exactly the connection is failing. This could involve adding debug statements at various stages of the connection process.\nRemember that while CloudWatch and Device Advisor are helpful, they may not capture all failure scenarios, especially if the connection isn't being established in the first place. Focus on gathering more detailed logs from your embedded device itself to get a clearer picture of what's happening during the connection attempt.\nSources\nESP32 Fails to Connect to AWS IoT Core via MQTT (TLS Handshake Error) | AWS re:Post\nIssue: AWS IoT MQTT Test Client stuck at \"Fetching client endpoint\" | AWS re:Post\n\nI\u2019ve captured logs from CloudWatch, and while all event types are visible when the device connects successfully, the logs don\u2019t provide any specific reason when the connection to MQTT fails.\nCould you please guide me on where to find detailed logs or diagnostics in AWS IoT Core that explain the cause of connection failures?\n\nEnsure that your AWS IoT Core logs are set to the DEBUG level.\nPlease share the exact mosquitto invocation and the firmware MQTT code snippet.\nTypical reasons for MQTT connectivity issues are incorrect (or omitted) Client ID and TLS configuration.\n\nI enabled the debug log level and captured the failure log from CloudWatch, as shown in the attached screenshot which is tested with my embedded device.\nHowever, when I tested the same MQTT credentials on my Linux PCusing some application, the connection was successful. The screenshot of the successful connection is also attached.\nPlease look into it."
}