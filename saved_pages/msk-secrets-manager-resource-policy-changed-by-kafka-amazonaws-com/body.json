{
  "body": "So we deployed our secrets manager with user and passoword in one account and a resource policy with following statement:\n{\n\"Version\" : \"2012-10-17\",\n\"Statement\" : [ {\n\"Sid\" : \"AWSKafkaResourcePolicy\",\n\"Effect\" : \"Allow\",\n\"Principal\" : {\n\"AWS\" : \"arn:aws:iam::{ourAccountId}:root\",\n\"Service\" : \"kafka.amazonaws.com\"\n},\n\"Action\" : [ \"secretsmanager:getSecretValue\", \"secretsmanager:DescribeSecret\" ],\n\"Resource\" : \"arn:aws:secretsmanager:eu-central-1:{mskAccId}:secret:AmazonMSK_eos-datapipeline-ads-all-prod-12345\"\n} ]\n}\nAnd after resource creation i see a couple of seconds later an event in CloudTrail, generated by Username {mskAccId}, sourceIp kafka.amazonaws.com, overriding my policy with the following(no AWS principal and no \"secretsmanager:DescribeSecret\" ):\n{\n\"Version\" : \"2012-10-17\",\n\"Statement\" : [ {\n\"Sid\" : \"AWSKafkaResourcePolicy\",\n\"Effect\" : \"Allow\",\n\"Principal\" : {\n\"Service\" : \"kafka.amazonaws.com\"\n},\n\"Action\" : [ \"secretsmanager:getSecretValue\" ],\n\"Resource\" : \"arn:aws:secretsmanager:eu-central-1:{mskAccId}:secret:AmazonMSK_eos-datapipeline-ads-all-prod-12345\"\n} ]\n}\nAny idea why?\nI ll leave more info from the event in case u consider them relevant:\neventType\": \"AwsApiCall\",\n\"sourceIPAddress\": \"kafka.amazonaws.com\",\n\"userAgent\": \"kafka.amazonaws.com\",\n\"eventCategory\": \"Management\"\n\nWhen you associate a secret with an Amazon MSK cluster for SASL/SCRAM authentication, MSK automatically modifies the resource policy of the secret to ensure it has the necessary permissions to access the secret. This is part of the normal operation when using AWS Secrets Manager for sign-in credentials authentication with MSK.\nThe modification you're seeing in CloudTrail is Amazon MSK service updating the resource policy to ensure it has the proper access to the secret. MSK specifically needs the\nsecretsmanager:GetSecretValue\npermission to retrieve the credentials stored in the secret.\nThe service removes the AWS account root principal and the\nsecretsmanager:DescribeSecret\npermission because MSK only requires the minimum permissions necessary to function properly, which is retrieving the secret value. This follows the principle of least privilege.\nWhen using Secrets Manager with MSK, the service periodically syncs credential data from the secret to the MSK cluster. This automatic synchronization requires the service to have access to the secret, which is why it modifies the resource policy to ensure it has the necessary permissions.\nIf you need to maintain additional permissions in the resource policy, you might need to implement a solution that restores your desired policy after MSK makes its changes, but be careful not to remove the permissions that MSK requires to function properly.\nSources\nSign-in credentials authentication with AWS Secrets Manager - Amazon Managed Streaming for Apache Kafka\nResource-based policies - AWS Secrets Manager"
}