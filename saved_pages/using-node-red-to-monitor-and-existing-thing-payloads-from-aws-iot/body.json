{
  "body": "please treat me as a novice,\nmy issue is duplicate client ID and device disconnection, how do I get around this??.\nTo speed up development, I want to review payloads of existing things by using node red to also collect the payload from an existing AWS IOT things.  if I entry the same certificate details, into node red ,  the duplicate issue occurs, which is understandable,\nHow can I collect this payload data from an existing field device /thing , using node red and not have the duplicate ID issue. ??\nIs it possible to create suitable access/certificate in AWS IOT for node red to view any payload from any device ??\nThankyou\n\nTo address your issue with duplicate client IDs and device disconnections while using Node-RED to monitor existing AWS IoT \"things,\" there are a few approaches you can take:\nUse a unique client ID for Node-RED:\nInstead of using the same client ID as the existing device, create a unique client ID for your Node-RED connection. This can be done by appending a suffix to the original thing name or using a completely different identifier. For example, if your thing is named \"MyDevice,\" you could use \"MyDevice-NodeRED\" as the client ID for your Node-RED connection.\nCreate a separate \"thing\" for Node-RED:\nRegister a new thing in AWS IoT specifically for your Node-RED monitoring. This allows you to have a distinct identity and set of credentials for Node-RED, avoiding conflicts with existing devices.\nUse a wildcard client ID in your IoT policy:\nModify your AWS IoT policy to allow connections with any client ID. This can be done by using a wildcard in the resource ARN for the iot:Connect action. However, be cautious with this approach as it may have security implications.\nImplement a custom solution for payload sharing:\nInstead of having Node-RED connect directly to AWS IoT Core, you could set up an intermediary service (like AWS Lambda or a custom application) that receives the messages from IoT Core and then forwards them to Node-RED through a separate channel.\nTo create suitable access for Node-RED to view payloads from any device:\nCreate a new IAM role with permissions to access IoT Core.\nGenerate a new certificate for Node-RED and associate it with the new role.\nCreate an IoT policy that allows broader access, such as subscribing to multiple topics or using wildcards in topic filters.\nRemember to follow the principle of least privilege and only grant the necessary permissions for your monitoring needs.\nBy implementing one or a combination of these approaches, you should be able to use Node-RED to monitor payloads from existing AWS IoT things without encountering duplicate client ID issues or causing disconnections of your field devices.\nSources\nConflicting MQTT client IDs - AWS IoT Device Defender\nAWS IoT Thing Connected Event, Find the thing Name from Event. | AWS re:Post\nSecurity best practices in AWS IoT Core - AWS IoT Core\nUnclear use of the correct IoT Core policy | AWS re:Post"
}