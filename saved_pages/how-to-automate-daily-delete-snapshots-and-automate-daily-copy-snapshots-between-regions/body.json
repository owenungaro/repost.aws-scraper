{
  "body": "Hi re:Post !\nEveryday we are manually coping (14) rds postgresql snapshots from one region (N. California us-west-1) to another (Oregon us-west-2).  But first, we are manually deleting the oldest (14) from Oregon to make room for the N. California snapshots b/c of the 100 manual copies limit per region.\nWe would like to automate daily:\nAutomate deleting the oldest (14) manual snapshot copies in the Oregon region and then\nAutomate coping the daily newest (14) system snapshots in N. California over to Oregon region. (There are only (14) new snapshots per day in N. California).\nWe been reading:\n\"\nhttps://dev.to/aws-builders/aws-event-bridge-and-lambda-to-copy-rds-snapshots-to-another-region-kl3\n\"\nwhich seems to cover 2) above but before we try that,\nhow would we handle  \"1) Deleting the oldest (14) manual snapshot copies in the Oregon Region\"\nWe know the exact names of the db snapshots we need to copy over and what to rename name the copied snapshots.  This will not change day to day except for the dates.\nFor example, using today's workflow, below are the renamed copies that end up in Oregon:\ncopy-rds-db-amgen-2025-06-16\ncopy-rds-db-alpine-2025-06-16\ncopy-rds-db-walgreens-2025-06-16\ncopy-rds-db-vividion-2025-06-16\ncopy-rds-db-avidity-2025-06-16\ncopy-rds-db-urovant-2025-06-16\ncopy-rds-db-atlas-2025-06-16\ncopy-rds-db-vir-2025-06-16\ncopy-rds-db-recursion-2025-06-16\ncopy-rds-db-genentech-2025-06-16\ncopy-rds-db-pfizer-cbx-2025-06-16\ncopy-rds-db-kyverna-2025-06-16\ncopy-rds-db-enveda-2025-06-16\ncopy-rds-db-syndax-2025-06-16\nThank you for your time and help!\nBest Regards,\nDonald\n\nYou can automate both the deletion of old snapshots and copying of new snapshots between regions using AWS Lambda with EventBridge Scheduler. Here's how to implement this solution:\nOption 1: Using a Lambda Function\nYou can create a Lambda function that performs both tasks:\nFirst, delete the oldest 14 manual snapshots in Oregon (us-west-2)\nThen copy the latest 14 system-generated snapshots from N. California (us-west-1) to Oregon\nHere's a Python Lambda function that would accomplish this:\nimport\nboto3\nimport\nos\nfrom\ndatetime\nimport\ndatetime\n# Define regions\nSOURCE_REGION\n=\n\"us-west-1\"\n# N. California\nDEST_REGION\n=\n\"us-west-2\"\n# Oregon\nNUM_SNAPSHOTS\n=\n14\n# Number of snapshots to process\ndef\nlambda_handler\n(\nevent\n,\ncontext\n)\n:\n# Create RDS clients for both regions\nsource_rds\n=\nboto3\n.\nclient\n(\n'rds'\n,\nregion_name\n=\nSOURCE_REGION\n)\ndest_rds\n=\nboto3\n.\nclient\n(\n'rds'\n,\nregion_name\n=\nDEST_REGION\n)\n# Step 1: Delete oldest manual snapshots in destination region\ndelete_oldest_snapshots\n(\ndest_rds\n,\nNUM_SNAPSHOTS\n)\n# Step 2: Copy latest system snapshots from source to destination\ncopy_latest_snapshots\n(\nsource_rds\n,\ndest_rds\n,\nNUM_SNAPSHOTS\n)\nreturn\n{\n'statusCode'\n:\n200\n,\n'body'\n:\nf'Successfully processed\n{\nNUM_SNAPSHOTS\n}\nsnapshots'\n}\ndef\ndelete_oldest_snapshots\n(\ndest_rds\n,\ncount\n)\n:\n# Get all manual snapshots in destination region\nresponse\n=\ndest_rds\n.\ndescribe_db_snapshots\n(\nSnapshotType\n=\n'manual'\n)\n# Sort snapshots by creation time (oldest first)\nsnapshots\n=\nsorted\n(\nresponse\n[\n'DBSnapshots'\n]\n,\nkey\n=\nlambda\ns\n:\ns\n[\n'SnapshotCreateTime'\n]\n)\n# Delete the oldest 'count' snapshots\nfor\ni\n,\nsnapshot\nin\nenumerate\n(\nsnapshots\n)\n:\nif\ni\n>=\ncount\n:\nbreak\nsnapshot_id\n=\nsnapshot\n[\n'DBSnapshotIdentifier'\n]\nprint\n(\nf\"Deleting snapshot:\n{\nsnapshot_id\n}\n\"\n)\ntry\n:\ndest_rds\n.\ndelete_db_snapshot\n(\nDBSnapshotIdentifier\n=\nsnapshot_id\n)\nprint\n(\nf\"Successfully deleted snapshot:\n{\nsnapshot_id\n}\n\"\n)\nexcept\nException\nas\ne\n:\nprint\n(\nf\"Error deleting snapshot\n{\nsnapshot_id\n}\n:\n{\nstr\n(\ne\n)\n}\n\"\n)\ndef\ncopy_latest_snapshots\n(\nsource_rds\n,\ndest_rds\n,\ncount\n)\n:\n# Get all automated snapshots in source region\nresponse\n=\nsource_rds\n.\ndescribe_db_snapshots\n(\nSnapshotType\n=\n'automated'\n)\n# Sort snapshots by creation time (newest first)\nsnapshots\n=\nsorted\n(\nresponse\n[\n'DBSnapshots'\n]\n,\nkey\n=\nlambda\ns\n:\ns\n[\n'SnapshotCreateTime'\n]\n,\nreverse\n=\nTrue\n)\n# Get today's date for naming\ntoday\n=\ndatetime\n.\nnow\n(\n)\n.\nstrftime\n(\n\"%Y-%m-%d\"\n)\n# Define the database names based on your example\ndb_names\n=\n[\n\"amgen\"\n,\n\"alpine\"\n,\n\"walgreens\"\n,\n\"vividion\"\n,\n\"avidity\"\n,\n\"urovant\"\n,\n\"atlas\"\n,\n\"vir\"\n,\n\"recursion\"\n,\n\"genentech\"\n,\n\"pfizer-cbx\"\n,\n\"kyverna\"\n,\n\"enveda\"\n,\n\"syndax\"\n]\n# Copy the newest 'count' snapshots\nfor\ni\n,\nsnapshot\nin\nenumerate\n(\nsnapshots\n[\n:\ncount\n]\n)\n:\nif\ni\n>=\ncount\n:\nbreak\nsource_snapshot_id\n=\nsnapshot\n[\n'DBSnapshotIdentifier'\n]\ndb_instance_id\n=\nsnapshot\n[\n'DBInstanceIdentifier'\n]\n# Use the corresponding db name from the list if available\ndb_name\n=\ndb_names\n[\ni\n]\nif\ni\n<\nlen\n(\ndb_names\n)\nelse\ndb_instance_id\n# Create target snapshot name\ntarget_snapshot_id\n=\nf\"copy-rds-db-\n{\ndb_name\n}\n-\n{\ntoday\n}\n\"\nprint\n(\nf\"Copying snapshot\n{\nsource_snapshot_id\n}\nto\n{\ntarget_snapshot_id\n}\n\"\n)\ntry\n:\n# Create ARN for source snapshot\nsource_arn\n=\nf\"arn:aws:rds:\n{\nSOURCE_REGION\n}\n:\n{\nsnapshot\n[\n'DBSnapshotArn'\n]\n.\nsplit\n(\n':'\n)\n[\n4\n]\n}\n:\n{\nsource_snapshot_id\n}\n\"\n# Copy the snapshot\ndest_rds\n.\ncopy_db_snapshot\n(\nSourceDBSnapshotIdentifier\n=\nsource_arn\n,\nTargetDBSnapshotIdentifier\n=\ntarget_snapshot_id\n,\nSourceRegion\n=\nSOURCE_REGION\n)\nprint\n(\nf\"Successfully initiated copy of\n{\nsource_snapshot_id\n}\nto\n{\ntarget_snapshot_id\n}\n\"\n)\nexcept\nException\nas\ne\n:\nprint\n(\nf\"Error copying snapshot\n{\nsource_snapshot_id\n}\n:\n{\nstr\n(\ne\n)\n}\n\"\n)\nOption 2: Using RDS Cross-Region Backup Replication\nAlternatively, you can enable automated cross-region backup replication directly in RDS:\nOpen the Amazon RDS console\nNavigate to \"Automated backups\"\nSelect your database and click \"Actions\" then \"Manage cross-Region replication\"\nEnable replication to Oregon (us-west-2)\nSet the replicated backup retention period to match your needs\nThis approach handles the copying automatically, but you would still need a Lambda function to handle the deletion of old snapshots.\nImplementation Steps:\nCreate an IAM role for your Lambda function with permissions for:\nrds:DescribeDBSnapshots\nrds:CopyDBSnapshot\nrds:DeleteDBSnapshot\nCreate the Lambda function using the code above\nSet up EventBridge Scheduler to trigger the Lambda function daily:\nOpen the EventBridge console\nCreate a new schedule\nSet the schedule pattern to run daily\nSelect your Lambda function as the target\nTest the function with a small number of snapshots first to ensure it works as expected\nThis solution will automate your daily workflow of deleting old snapshots and copying new ones between regions.\nSources\nHow to automate coping snapshots from N.California to Oregon? | AWS re:Post\nCommunity | Protect Your Data in Amazon RDS Against Disaster or Accidental Deletion\nCommunity | Protect Your Data in Amazon RDS Against Disaster or Accidental Deletion\nRDS Snapshot | Delete - AMS Advanced Change Type Reference\n\nHey DC, its been a while.\nI recall you asking the same question a few months ago..\nhttps://repost.aws/questions/QUXX6v4d7JRyeq6YTDhOQZ6A/how-to-automate-coping-snapshots-from-n-california-to-oregon\nNot sure if that is still the case still\n\nHi Gary!  Yes it has been awhile and yes this is essentially the question from a few months ago.\nThe initiative got sidelined but now it's back as a task for me to complete.  The AI answer did a really good job - I forgot to mention the naming of the copies as a step in this process but somehow the AI 'realized' this and addressed it as well.\nI'm trying to figure out why we're not using \"Option 2\" above suggested by the bot.\nWe have these (14) dbs in Ohio, they are setup with automatic backups, with replication to N. California with a retention of 30 days.   In Oregon, we already have a group of snapshots being auto replicated there (20) from Ohio backups. Why are we not just adding those (14) snapshots to the auto replication process in place from Ohio to Oregon?  Is there a limit?\nThank you for your time and help!\nBest Regards,\nDonald"
}