{
  "body": "I created a DynamoDB table by default to test the public access to it.\nNo resource-based policy for table by default.\nAm I supposed to be  able to list that table ?\nI tested it and I could. Is that supposed to be ?\nthanks !!\n\nYes, you are supposed to be able to list your DynamoDB table by default. When you create a DynamoDB table without explicitly attaching a resource-based policy, access to the table is controlled by identity-based policies (IAM policies) attached to your user, role, or group.\nBy default, the AWS account that creates a DynamoDB table has access to that table through the IAM permissions of the creator. This is why you were able to list the table you created.\nDynamoDB's Block Public Access (BPA) feature specifically prevents the attachment of resource-based policies that would grant public access to DynamoDB tables, indexes, or streams across AWS accounts. It doesn't prevent authorized users within your account from accessing tables they have permission to use.\nIf you want to restrict access to your table, you can:\nAttach a resource-based policy to the table that explicitly defines who can access it\nUse identity-based policies to control which actions users can perform on specific tables\nImplement attribute-based access control using tags to manage permissions at scale\nWithout any explicit restrictions, your ability to list the table is the expected behavior based on your IAM permissions.\nSources\nBlocking public access with resource-based policies in DynamoDB - Amazon DynamoDB\nAmazon DynamoDB: Allows access to a specific table - AWS Identity and Access Management\nAttach a policy to an DynamoDB existing table - Amazon DynamoDB\n\nBased on my experience working with DynamoDB, when you create a table, by default, it doesn't attach a resource-based policy unless you explicitly configure one. However, even without a resource-based policy,\nIAM identity-based policies\n(like the ones attached to your user or role) still control access.\nSo, if you're able to list the table, it likely means that your current IAM role or user has the necessary permissions, such as\ndynamodb:ListTables\nor\ndynamodb:DescribeTable\n. These permissions are not controlled by the table's resource policy but by what\u2019s granted to your identity in the AWS account.\nIt's also important to note that\nDynamoDB is not publicly accessible over the internet\nin the way that, say, an S3 bucket might be. All access must go through AWS-authenticated channels, so even if you test \u201cpublic access,\u201d it still requires valid credentials unless explicitly exposed through something like an API Gateway with misconfigured permissions.\nIn short, yes, you can list the table if your IAM user/role has the right permissions, even without a resource-based policy. That behavior is expected."
}