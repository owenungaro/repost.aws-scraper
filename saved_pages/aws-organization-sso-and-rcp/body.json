{
  "body": "I have AWS Organization, with Identity center enabled with AWS SSO, I want to create RCP  at the root level that allows only AssumeRoleWithSAML when SAML is issued by AWS Identity center SSO,\n\nTo enforce access only via SAML federation from AWS Identity Center, you can apply a Condition in your IAM roles\u2019 trust policy using the aws:SourceIdentity or sts:ExternalId context keys \u2014 but Identity Center doesn't directly use ExternalId. Instead, the safer and more scalable option is:\nStep-by-Step:\nUse IAM Role Trust Policy with SAML Principal:\njson\nCopy\nEdit\n{\n\"Version\": \"2012-10-17\",\n\"Statement\": [\n{\n\"Effect\": \"Allow\",\n\"Principal\": {\n\"Federated\": \"arn:aws:iam::<YOUR_ACCOUNT_ID>:saml-provider/<PROVIDER_NAME>\"\n},\n\"Action\": \"sts:AssumeRoleWithSAML\",\n\"Condition\": {\n\"StringEquals\": {\n\"SAML:aud\": \"\nhttps://signin.aws.amazon.com/saml\n\"\n}\n}\n}\n]\n}\nEnsure the SAML Provider is tied to Identity Center.\nAWS Identity Center automatically manages the SAML identity provider behind the scenes, so any roles attached to Identity Center should use the correct trust policy like above.\nAvoid Allowing AssumeRole or STS Direct Calls:\nDo not attach additional policies or trust relationships that allow plain sts:AssumeRole \u2014 this ensures users can't bypass SAML and must go through Identity Center login flow.\nPro Tip:\nUse Permission Sets in Identity Center, and assign them to users/groups. Identity Center manages the IAM roles and SAML conditions automatically.\nYou don\u2019t need to manually build a root-level \u201cRCP\u201d \u2014 AWS Identity Center already creates and attaches correct policies unless you\u2019re customizing federated flows across accounts.\nFinal Note:\nIf you\u2019re working in a multi-account Org, use Account Assignments in Identity Center + Permission Sets and you\u2019ll stay within the proper AssumeRoleWithSAML boundary.\nLet me know if you want help generating a JSON policy for one of your accounts!"
}