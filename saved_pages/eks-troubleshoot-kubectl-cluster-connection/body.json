{
  "body": "When I use the kubectl command-line tool to try to connect to my Amazon Elastic Kubernetes Service (Amazon EKS) cluster, I receive an error message.\n\nResolution\nIf you can't connect to your Amazon EKS cluster when you use\nkubectl\n, then you might have incorrectly configured a service, permission, or setting. An error can also occur when the local environment can't communicate with the EKS cluster's API server. Troubleshoot your issue based on the error message that you receive.\nNote:\nIf you receive errors when you run AWS Command Line Interface (AWS CLI) commands, then see\nTroubleshooting errors for the AWS CLI\n. Also, make sure that\nyou're using the most recent AWS CLI version\n.\nPrerequisites:\nRun the following command to check whether the system can establish a connection with the correct cluster:\nkubectl config current-context\nRun the following\nget-caller-identity\nAWS CLI command to verify that the currently authenticated AWS Identity and Access Management (IAM) user or role is correct:\naws sts get-caller-identity\nNote:\nAllow the IAM principal to access Kubernetes objects on your cluster based on the\ncluster authentication mode\n.\n\"exec plugin invalid\" error message\nWhen the authentication API version in the\nkubeconfig\nfile isn't compatible with the Kubernetes API control plane version, you receive the following error message:\n\"exec plugin: invalid apiVersion \"client.authentication.k8s.io/v1alpha\"\"\nRun the following\nupdate-kubeconfig\ncommand to update the\nkubeconfig\nfile for your cluster:\naws eks update-kubeconfig --region region-code --name my-cluster\nNote:\nReplace\nregion-code\nwith the AWS Region that your cluster is in and\nmy-cluster\nwith the name of your cluster.\nYour\nkubectl version\nmust be within one minor earlier or later version difference of your Amazon EKS cluster control plane. For example, a\nkubectl\nversion 1.29 client works with Kubernetes 1.28, 1.29, and 1.30 clusters.\n\"couldn't get current server API group list\" error message\nWhen the\nkubeconfig\nfile doesn't exist or doesn't contain the certificate authority (CA), you receive the following error message:\n\"couldn't get current server API group list: Get \"https://xxxxxxxxxxxxxxxxxxxx..eks.amazonaws.com/api?timeout=32s\": tls: failed to verify certificate: x509: certificate signed by unknown authority\"\nRun the following command to check whether the\nkubeconfig\nfile exists in the default location (.kube) in your home directory:\ncat ~/.kube/config\nIf the file exists, then verify that the base64-encoded cluster CA is in the\nkubeconfig\nfile. Also, check whether the\ncertificate-authority-data\nfile exists and you correctly configured it.\nIf the\nkubeconfig\nfile doesn't exist, then run the following command to recreate it:\nkubectl get svc --insecure-skip-tls-verify\nCheck whether you use a proxy or VPN that might block TLS.\n\"could not get current server API group list\" timeout error message\nIf the source host can't communicate with the API server on port 443, then the request times out and you receive the following error message:\n\"could not get current server API group list: Get \"https://xxxxxxxxxxxxxxxxxxxx.gr7.\n<region-code>\n.eks.amazonaws.com/api?timeout=32s\": dial tcp xx.yy.zz.vvv:443: i/o timeout\"\nRun the following command to use telnet on port 443 to check the API server endpoint connectivity from your device:\n$ echo exit | telnet\nExample output:\nxxxxxxxxxxxxxxxxxxxx.gr7.us-east-2.eks.amazonaws.com 443Trying 18.224.160.210...\nConnected to xxxxxxxxxxxxxxxxxxxx.gr7.us-east-2.eks.amazonaws.com.\nEscape character is '^]'.\nConnection closed by foreign host.\nIf the telnet command doesn't resolve the issue, then take the following actions:\nIf you activated public access on the API server endpoint, then check whether you restricted access to the API server endpoint to a certain CIDR range. Make sure that the device's IP address belongs to the CIDR block. Also, check the\nAPI server endpoint access behavior\n.\nIf you activated only private access on the API server endpoint, then all cluster API server traffic must come from the virtual private cloud (VPC) or a\nconnected network\n. Also,\nkubectl\ncommands must come from within the VPC or a connected network. For more information, see\nAccessing a private only API server\n.\nCheck whether the security groups or network access control lists (network ACLs) block requests to the Kubernetes API server. Make sure that the cluster security group allows traffic on port 443 from the source's CIDR.\n\"couldn't get current API server group list\" error message\nWhen you try to perform an action without permission to access the Kubernetes API on the Amazon EKS cluster, you receive the following error message:\n\"couldn't get current server API group list: the server has asked for the client to provide credentials\"\nTo resolve the issue, complete the following steps:\nRun the\nget-caller-identity\ncommand to check who made the request to access the EKS cluster:\naws sts get-caller-identity\nExample output:\n{\n\"UserId\": \"user-ID\",\n \"Account\": \"account-ID\",\n \"Arn\": \"arn:aws:iam::account-ID:user/kube-user\"\n}\nNote:\nThe preceding example output contains the User ID, AWS account, and ARN of the IAM entity that made the request.\nChange the authentication mode\nto either\nAPI_AND_CONFIG_MAP\nor\nAPI\n, and then\nuse EKS access entries to grant IAM users access to Kubernetes\n.\nTo grant the appropriate permissions, use either\nAPI\nor\nAPI_AND_CONFIG_MAP\nauthentication mode to add the entry of the IAM entity.\nAPI authentication mode\nRun the following\ncreate-access-entry\nto create an access entry that allows the IAM principal to authenticate to your Amazon EKS cluster:\naws eks create-access-entry --cluster-name my-cluster --principal-arn arn:aws:iam::111122223333:user/my-user --type STANDARD --username my-user\nNote:\nIn the preceding command, replace the principal ARN with your IAM entity's ARN.\nRun the following\nassociate-access-policy\ncommand to associate the access entry with an access policy:\naws eks associate-access-policy --cluster-name my-cluster --principal-arn arn:aws:iam::111122223333:role/my-role \\\n--access-scope type=cluster --policy-arn arn:aws:eks::aws:cluster-access-policy/AmazonEKSViewPolicy\nAPI_AND_CONFIG_MAP authentication mode\nFor\nAPI_AND_CONFIG_MAP\nauthentication mode, you can use either the preceding\nAPI\nauthentication mode, or you can edit the configmap.\nTo edit\naws-auth configmap\n, run the following command:\nkubectl edit configmap aws-auth -n kube-system\nAdd your IAM role or user to the\nmapRoles\nor\nmapUsers\nsection.\nThe following is an example\nmapRoles\nsection with an entry for an IAM role:\nmapRoles: |\n- groups:\n      - system:masters\n      rolearn: arn:aws:iam::111122223333:role/MyEKSrole\n      username: eks-user\nNote:\nReplace the example ARN with the ARN of your IAM role. If you're using an IAM user, then replace\nMapRoles\nwith\nMapUsers\nand the ARN with the IAM user's ARN.\nThe preceding example maps the IAM principal to the\nsystem:masters\ngroup that grants full administrative access to the cluster. For more restrictive access, map the IAM principal to a custom Kubernetes user or group, and use Kubernetes role-based access control (RBAC) objects to define the necessary permissions. For more information, see\nUsing RBAC Authorization\non the Kubernetes website.\n\"Did you specify the right host or port?\" error message\nIf you didn't correctly configure the\nkubeconfig\nfile, then\nkubectl\ncan't connect to the EKS cluster, and you receive the following error message:\n\"The connection to the server localhost:8080 was refused - did you specify the right host or port?\"\nTo resolve this issue, take the following actions:\nRun the following command to update the\nkubeconfig\nfile:\naws eks update-kubeconfig --region region-code --name my-cluster\nRun the following command to check the current context in your\nkubeconfig\nfile:\nkubectl config current-context\nIf the output of the current-context command doesn't point to the expected EKS cluster, then run the following command:\nkubectl config use-context ;\nRelated information\nConnect kubectl to an EKS cluster by creating a kubeconfig file"
}