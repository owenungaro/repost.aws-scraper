{
  "body": "I have a stack with a\nAWS::AppSync::GraphQLApi\nresource that has an\nAuthenticationType\nset to\nAPI_KEY\n. In the same stack template I have a\nAWS::AppSync::ApiKey\nresource that is linked to the\nGraphQLApi\nresource via the\nApiId\nproperty. This has been deployed into an account, but subsequently the ApiKey resource has been deleted via the AppSync console.\nWhen I run drift detection on the stack neither of the\nGraphQLApi\nor\nApiKey\nresources are listed (whereas a\nAWS::AppSync::Resolver\nis listed).\nIf I add another resource to the template and attempt to deploy it, CloudFormation halts deployment with an \"API key not found\" error.\nDoes this mean that CloudFormation cannot detect drift for either\nGraphQLApi\nor\nApiKey\nresource types?\n\nHello Iain Woolley,\nI replicated your scenario by deploying a CloudFormation stack with\nAWS::AppSync::GraphQLApi\nand\nAWS::AppSync::ApiKey\nresources. After manually deleting the API key via the AppSync console, I ran drift detection on the stack. No drift was reported for either resource. Additionally, attempting to add a new resource to the stack failed with the error:\nAPI key not found: da2-ev7e42k2cregppsk#### (Service: AWSAppSync; Status Code: 404; Error Code: NotFoundException; Request ID: 387ad459-379f-495b-9d8f-####; Proxy: null)\nThis behavior is expected. Per the\nAWS CloudFormation Resource type support\ndocumentation,\nAWS::AppSync::ApiKey\ndoes not support drift detection.\nRecommendations:\nManage Resources Exclusively via CloudFormation: To prevent drift and ensure consistency, we recommend managing all AppSync resources (including API keys) solely through CloudFormation. Avoid manual changes via the AWS Console, CLI, or SDK.\nRecover from Drift:\nTo resolve the current issue, you can either:\nRecreate the deleted API key in the AppSync console with the same ApiId to align with the template.\nOr, remove the AWS::AppSync::ApiKey resource from the template and update the stack, then re-add it if needed.\nAfter aligning the resources, retry the stack update.\nCheck Documentation for Updates: AWS periodically adds drift detection support for new resource types. Refer to the AWS CloudFormation documentation for the latest list of supported resources:\nAWS CloudFormation Resource type support\nI hope this is helpful.\nPlease upvote this answer if you find it helpful. Thank you!\n\nThanks for the confirmation that AWS::AppSync::ApiKey cannot be detected for drift by CloudFormation. I'm surprised that the AWS::AppSync::GraphQLApi isn't listed in the drift report, as it is listed in the CloudFormation resource type support, but that's not an issue for me right now.\n\nAs mentioned by Nihar, CloudFormation does not detect drift for all resources. To avoid similar problems in the future,\nStore the api key in SSM parameter and obtain the value from there when needed.\nWrite a custom AWS config rule to check if the value has changed. It's a bit of work as you need custom lambda function.\nUse third-party tools like driftctl [\nhttps://github.com/snyk/driftctl\n]\nFinally, avoid deletion of the resource unless it is called via CloudFormation. This can be achieved via SCP or IAM policy as shown below.\n{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"DenyDirectApiKeyDelete\",\n      \"Effect\": \"Deny\",\n      \"Action\": [\n        \"appsync:DeleteApiKey\",\n        \"appsync:UpdateApiKey\"\n      ],\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"StringNotEquals\": {\n          \"aws:CalledVia\": \"cloudformation.amazonaws.com\"\n        }\n      }\n    }\n  ]\n}\n\nThanks for your advice on the use of the SSM paramter store for storing API keys. That sounds like a good way to workaround CloudFormation's lack of drift detection for AWS::AppSync::ApiKey."
}