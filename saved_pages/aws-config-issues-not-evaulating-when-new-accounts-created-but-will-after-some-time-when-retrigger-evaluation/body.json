{
  "body": "During the very first run as soon as new AWS account gets created I'm receiving Non Compliant status. But after sometime when I retrigger the evaluation without changing anything in the resource these rules are giving Complaint status. This is a custom config rule written in python.\ni'm wondering what behavior can cause this in AWS config rules, is it possible that hte order of the code in which it is written can cause this and is there anyway to fix this?\nI want to also note that I did look in the console and went to lambad permissions and looked at hte role attached to that lambda. I noticed **config:PutEvaluations **is anywhere as a permission in the role policies.\nWould this be due to the way config works when a new account is created? For example, new account is created, not all AWS resources and service metadata are immediately available. Some resources may not yet exist (e.g., IAM roles, baseline buckets, default VPC, CloudTrail trail, etc.). and this can cause this? Or could it be config:PutEvaluations even though it works after a while and evaluates?\nWhat's confusing is how is it evaluating when it doesn't have evaulate permission or I don't see this permission listed? After the retrirgger.\n\nLet me help break this down and explain the potential causes:\nInitial Non-Compliant Status Issue:\nThe behavior you're describing (initially non-compliant, then compliant after re-evaluation) could be due to several factors:\nResource Initialization Delay: When a new AWS account is created, there is indeed a delay in the full initialization of various AWS services and resources. This \"eventual consistency\" model can affect Config rules evaluation.\nAWS Config Service Synchronization: Config needs time to discover and record the configuration state of resources in your account. The initial evaluation might occur before this process is complete.\nRegarding the config:PutEvaluations Permission:\nIt's important to note that:\nThe config:PutEvaluations permission should be present in your Lambda execution role for the Config rule to function properly\nIf your rule is working after retrigger, the permission must exist somewhere - check for:\nInline policies\nManaged policies (both AWS and customer managed)\nPermission boundaries\nService-linked roles\nTo troubleshoot this:\na) Verify permissions:\naws iam get-role-policy --role-name YOUR_LAMBDA_ROLE_NAME\naws iam list-attached-role-policies --role-name YOUR_LAMBDA_ROLE_NAME\nb) Check if you're using the AWS-managed policy AWSConfigRole, which includes necessary permissions\nBest Practices to Handle This:\nAdd appropriate error handling in your Lambda function\nImplement retries for failed evaluations\nAdd logging to track the evaluation process\nConsider adding a delay before the first evaluation\nExample Lambda Role Policy:\n{\n\"Version\"\n:\n\"2012-10-17\"\n,\n\"Statement\"\n:\n[\n{\n\"Effect\"\n:\n\"Allow\"\n,\n\"Action\"\n:\n\"config:PutEvaluations\"\n,\n\"Resource\"\n:\n\"*\"\n}\n]\n}\nThe fact that it works after retrigger suggests that the permission exists somewhere in your role structure. I'd recommend doing a thorough audit of your IAM roles and policies to locate where this permission is actually being granted.\nTo resolve the initial evaluation issue, you could:\nAdd error handling in your Lambda function\nImplement a check for resource readiness\nAdd appropriate waiting periods for new account initialization\nEnsure all required permissions are explicitly defined in your IAM roles"
}