{
  "body": "I'm using EKS Auto with a custom Node Pool to use EC2 Spot Instances. EKS Auto fails to spin up EC2 Spot instances because the\nAWSServiceRoleForEC2Spot\nservice-linked role does not exist. EKS Auto tries to create the\nAWSServiceRoleForEC2Spot\nservice-linked role and fail with error \"no session policy allows the iam:CreateServiceLinkedRole action\". The Cluster IAM Role has the\niam:CreateServiceLinkedRole\npermission, but it seems that when the EKS assume the role and create the session, a session policy is passed in and that session policy doesn't request\niam:CreateServiceLinkedRole\n.\nI have the following setup.\nThe Cluster IAM Role:\nCustomRoleForAmazonEKSAutoCluster\n- Configured according to\nhttps://docs.aws.amazon.com/eks/latest/userguide/auto-cluster-iam-role.html\nThe same cluster IAM Role also has the following permission attached as an in-linepolicy\n{\n            \"Effect\": \"Allow\",\n            \"Action\": \"iam:CreateServiceLinkedRole\",\n            \"Resource\": \"arn:aws:iam::{ACCOUNT_ID}:role/aws-service-role/spot.amazonaws.com/AWSServiceRoleForEC2Spot\"\n        }\nI observed the following error in a CloudTrail event.\n\"errorMessage\": \"User: arn:aws:sts::{ACCOUNT_ID}:assumed-role/CustomRoleForAmazonEKSAutoCluster/aws-go-sdk-1746204116907768802 is not authorized to perform: iam:CreateServiceLinkedRole on resource: arn:aws:iam::{ACCOUNT_ID}:role/aws-service-role/spot.amazonaws.com/AWSServiceRoleForEC2Spot because no session policy allows the iam:CreateServiceLinkedRole action\"\nThis can easily be fixed by running CLI command\naws iam create-service-linked-role --aws-service-name spot.amazonaws.com\n, but I managed multiple-hundred AWS accounts and would need to do this for each account. Running this script for multiple accounts and every time a new account gets provisioned is not an acceptable solution for us end EKS Auto clearly tries to provision the service-linked role already.\nWhat configuration can we change so that EKS Auto will have the correct permissions in the session to create the service-linked role?\n\nThe error you're encountering is related to session policies when EKS Auto assumes the CustomRoleForAmazonEKSAutoCluster role. Even though your role has the iam:CreateServiceLinkedRole permission, the session policy applied during role assumption is restricting this action.\nThere are a few approaches to resolve this issue:\nPre-create the service-linked role in each account. You can do this by running the AWS CLI command you mentioned:\naws iam create-service-linked-role --aws-service-name spot.amazonaws.com\nIf the role already exists, you'll see an error message indicating that the role name has been taken, which you can safely ignore.\nFor automation across multiple accounts, you could create a script or use AWS automation tools (like AWS Systems Manager Automation or AWS Lambda) to create this service-linked role in all your accounts.\nEnsure that the IAM policy attached to your CustomRoleForAmazonEKSAutoCluster includes the proper permission without restrictions. The inline policy you've added looks correct, but make sure there are no contradicting deny statements elsewhere in the policy.\nIf you're using AWS Organizations, you could consider using Service Control Policies (SCPs) to ensure this permission is available across all accounts.\nNote that when you run the create-service-linked-role command and see the error message about the role already existing, this is expected behavior and confirms that the role is already set up correctly in that account.\nSources\nTutorial: Create Amazon EC2 spot fleet roles with the AWS CLI - AWS Batch\nCommunity | Run Kubernetes Clusters for Less with Amazon EC2 Spot and Karpenter\nCommunity | Run Kubernetes Clusters for Less with Amazon EC2 Spot and Karpenter\n\nNot acceptable because I need to do this automated out of the box for managing 100s of AWS accounts and also when creating new AWS accounts, there should be no manual step required.\n\nYou're right -->this is a common issue when using EKS Auto with Spot capacity, especially in multi-account setups. Here\u2019s what\u2019s happening under the hood:\nEven though your custom EKS cluster role (CustomRoleForAmazonEKSAutoCluster) has iam:CreateServiceLinkedRole in its IAM policy, the STS AssumeRole call from EKS includes a session policy that doesn\u2019t include this permission. As a result, even though the base role allows it, the session is effectively restricted. Hence, the no session policy allows the iam:CreateServiceLinkedRole error.\nWhy This Happens:\nEKS Auto tries to create the AWSServiceRoleForEC2Spot service-linked role if it doesn\u2019t already exist.\nThe iam:CreateServiceLinkedRole call requires that:\nThe IAM role has permission in its policy AND\nThe STS session policy includes this permission (explicitly or by default)\nWhen EKS assumes your cluster role, the session policy restricts permissions further, and iam:CreateServiceLinkedRole isn't included.\nSolution (Fully Automated, Zero Manual Step)\nTo solve this at scale for 100s of accounts and new account provisioning, you need to proactively create the service-linked role in each account using automation. EKS Auto will then skip trying to create it, since it already exists.\nOption A: Use an Account Bootstrapping Lambda (preferred)\nSet up a centralized pipeline or Account Vending Machine (AVM) that runs this once per account when created:\naws iam create-service-linked-role --aws-service-name spot.amazonaws.com\nWrap this in an automation pipeline (e.g., Control Tower lifecycle event, Terraform, or AWS Config Custom Rule + Lambda).\nOption B: SCP Bypass (not recommended long-term)\nYou could remove session restrictions via SCP or adjust the way the EKS Auto cluster role is assumed, but this is fragile and not officially supported. The STS session policy used by EKS Auto is managed by AWS and can\u2019t be customized directly.\n\nSay I consider Option B, how would you do this by removing session restrictions with SCPs? We do use SCPs but there's no SCP restriction blocking anything related to creating service-linked roles or sessions.\nI don't think this is achievable with SCPs.\n\nThe only reliable fix:\nPre-create the AWSServiceRoleForEC2Spot service-linked role in every account during provisioning. Once it exists, EKS Auto doesn\u2019t attempt to create it, and the session policy restriction is avoided entirely.\nNote: Please ignore that he Option B... The intention was to flag it as a common rabbit hole that people look into, but not a recommended or functional solution, which is why it was marked:\n\"Option B: SCP Bypass (not recommended long-term)\"\n\"...but this is fragile and not officially supported.\""
}