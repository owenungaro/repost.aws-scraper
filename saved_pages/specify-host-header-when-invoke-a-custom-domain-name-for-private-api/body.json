{
  "body": "My questions are:\nWhen invoke a private custom domain name for private APIs, is it the default behavior of a private API to always require a host header with the id of the API? (Developer Guide doesn't seem to state that)\nIf the above is true, is there a workaround to invoke private custom domain name for private APIs without having to specify the Host header.\nBackground information:\nI have created a private API using the below instructions.\nhttps://docs.aws.amazon.com/apigateway/latest/developerguide/private-api-tutorial.html\nAs Amazon API Gateway now supports Custom Domain Name for private REST APIs, I want to try to call the created private API using custom domain name api.aws.internal.sample.com\nhttps://aws.amazon.com/about-aws/whats-new/2024/11/amazon-api-gateway-custom-domain-name-private-rest-apis/?nc1=h_ls\nNote: this is for for testing purpose so we are using a self-signed certificate and imported it to ACM.\nWe did the set up for Custom Domain Names and Route 53 following the below instructions.\nhttps://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-private-custom-domains-tutorial.html\nHowever, when trying to invoke the private custom domain name, the curl command returns 403 error.\nUsing curl command with Host header returns the expected 200 status.\nFor reference, below are the curl results:\n\u25a0curl without Host headers -> 403\ncurl -vk\nhttps://api.aws.internal.sample.com/test/hello\nHost api.aws.internal.sample.com:443 was resolved.\nIPv6: (none)\nIPv4: 10.0.{}.{}\nTrying 10.0.{}.{}:443...\nConnected to api.aws.internal.sample.com (10.0.{}.{}) port 443\nALPN: curl offers h2,http/1.1\n////\nSSL connection using TLSv1.2 / ECDHE-RSA-AES128-GCM-SHA256 / secp256r1 / rsaEncryption\nALPN: server did not agree on a protocol. Uses default.\nServer certificate:\n/////\nSSL certificate verify result: self-signed certificate (18), continuing anyway.\nCertificate level 0: Public key type RSA (2048/112 Bits/secBits), signed using sha256WithRSAEncryption\nusing HTTP/1.x\nGET /test/hello HTTP/1.1\nHost: api.aws.internal.sample.com\nUser-Agent: curl/8.5.0\nAccept:\n/\n< HTTP/1.1 403 Forbidden\n< Server: Server\n/////\n< Content-Type: application/json\n< Content-Length: 42\n< Connection: keep-alive\n/////\n< x-amzn-ErrorType: MissingAuthenticationTokenException\n/////\nConnection #0 to host api.aws.internal.sample.com left intact\n{\"message\":\"Missing Authentication Token\"}\n\u25a0curl with Host header -> 200\ncurl -vk\nhttps://api.aws.internal.sample.com/test/hello\n-H \"Host: {api-id}.execute-api.{region-id}.amazonaws.com\"\n//////\n< HTTP/1.1 200 OK\n< Server: Server\n< Date: ////\n< Content-Type: application/json\n< Content-Length: 27\n< Connection: keep-alive\n////\nConnection #0 to host api.aws.internal.sample.com left intact\nReached Lambda\n\u25a0Additional information\nAPI Gateway Resource Policy: Allow execute-api:Invoke for connection through API Gateway's VPC Endpoint\n\"Action\": \"execute-api:Invoke\",\n\"Resource\": \"arn:aws:execute-api:{region-id}:{account-id}:{api-id}/*/GET/hello\",\n\"Condition\": {\n\"StringEquals\": {\n\"aws:SourceVpce\": \"{AWS VPC Endpoint}\"\nResource Policy of Custom Domain names (API Gateway):  Allow execute-api:Invoke for only connection from API Gateway's VPC Endpoint\n\"Effect\": \"Deny\",\n\"Principal\": \"\n\",\n\"Action\": \"execute-api:Invoke\",\n\"Resource\": \"execute-api:/\n\",\n\"Condition\": {\n\"StringNotEquals\": {\n\"aws:SourceVpce\": \"{VPC Endpoint ID}\"\n\nTo address your questions regarding invoking a private custom domain name for private APIs:\nIt is not the default behavior of a private API to always require a host header with the ID of the API when invoking a private custom domain name. The requirement for a host header depends on how you've set up your private API and custom domain.\nThere are ways to invoke a private custom domain name for private APIs without specifying the Host header explicitly. Here are some approaches you can consider:\na) Use DNS resolution: If you've set up your private DNS correctly, you should be able to invoke the API using the custom domain name without specifying the Host header. Ensure that your Route 53 private hosted zone is properly configured to resolve the custom domain name to the VPC endpoint.\nb) VPC endpoint policy: Make sure your VPC endpoint policy allows access to your private custom domain name. You may need to adjust the policy to ensure it's not blocking requests without the specific Host header.\nc) Resource policies: Review both the private API resource policy and the private custom domain name resource policy. Ensure they are configured to allow access from your VPC endpoint without requiring additional headers.\nd) Domain name access association: Verify that you've created a domain name access association between your VPC endpoint and the private custom domain name. This association allows you to invoke the private custom domain name while isolated from the public internet.\ne) Check TLS settings: Ensure that your TLS settings are correct. Private custom domain names use the security policy of TLS-1.2 by default.\nIf you're still experiencing issues after checking these points, you may want to review your API Gateway configuration, VPC settings, and DNS setup to ensure everything is correctly configured for your private custom domain name.\nThe 403 Forbidden error you're receiving without the Host header suggests there might be an issue with your authentication or authorization setup. Double-check your resource policies, VPC endpoint policies, and API Gateway configuration to ensure they're correctly set up to allow access via the custom domain name without requiring the explicit Host header.\nRemember that when using private custom domain names, you need to create separate resource policies for your private API and for your private custom domain name. To successfully invoke a private custom domain name, an API consumer needs access granted by the private custom domain name resource policy, the private API resource policy, and any applicable VPC endpoint policies or authorization on the private API.\nSources\nCustom domain names for private APIs in API Gateway - Amazon API Gateway\nRest API - Best Practices for Designing Amazon API Gateway Private APIs and Private Integration\nInvoke a private API - Amazon API Gateway"
}