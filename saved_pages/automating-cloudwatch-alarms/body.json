{
  "body": "I'm working on automating CloudWatch alarms.  I got most of it to work, but now the logs aren't showing up on my CloudWatch dashboard.  How do I get it to show the logs in my dashboard and CloudWatch Insights?  I also need the templates to deploy to my dashboard instead of creating one every time an instance is spun up.  Would this also fix my logging problem?  The article I'm using to guide me through the process is below.\nhttps://aws.amazon.com/blogs/mt/automate-creation-of-amazon-cloudwatch-alarms-and-dashboards-with-aws-systems-manager-and-ansible/\n\nTo get your logs showing up in your CloudWatch dashboard, you need to ensure that you've properly configured log output to CloudWatch Logs. For AWS Systems Manager Automation actions, you can enable this by:\nOpening the AWS Systems Manager console\nNavigating to the Automation section\nSelecting the Preferences tab and clicking Edit\nChecking the \"Send output to CloudWatch Logs\" option\nOptionally enabling encryption for your log data\nFor your dashboard issue, CloudWatch dashboards can be created and customized to include both metrics and logs. You can use CloudWatch Logs Insights to create dashboard widgets that monitor specific log patterns and display them alongside your metrics.\nRegarding templates for your dashboards, you have a couple of options:\nCreate a template dashboard that includes all the widgets and configurations you need\nUse infrastructure as code tools (like CloudFormation or Terraform) to define your dashboards\nProgrammatically create and update dashboards using the AWS SDK or CLI\nUsing templates would help with your logging problem if the issue is related to dashboard configuration, but it wouldn't fix underlying logging configuration issues. Make sure your resources are properly configured to send logs to CloudWatch Logs first, then focus on how those logs are displayed in your dashboards.\nFor automated alarm creation, you can use CloudWatch's built-in alarm recommendations or create custom alarms based on specific metrics, logs, or metric math expressions. These can be templated and deployed automatically as part of your instance provisioning process.\nSources\nLogging Automation action output with CloudWatch Logs - AWS Systems Manager\nCloudWatch alarms and dashboards - AWS Prescriptive Guidance\nElevating Your AWS Observability: Unlocking the Power of Amazon CloudWatch Alarms | AWS Cloud Operations Blog\n\nRight now it's set to default but I want it to use multiple log groups.  How can I do that?\n\nHello Eric,\nTo use multiple log groups in CloudWatch, here's how you can set it up:\nFirst, define multiple log groups in your configuration:\n# In your CloudFormation template or similar IaC\nLogGroups\n:\n-\nLogGroupName\n:\n/aws/application1\nRetentionInDays\n:\n30\n-\nLogGroupName\n:\n/aws/application2\nRetentionInDays\n:\n14\nConfigure the CloudWatch agent to send logs to different groups:\n{\n\"agent\"\n:\n{\n\"run_as_user\"\n:\n\"root\"\n}\n,\n\"logs\"\n:\n{\n\"logs_collected\"\n:\n{\n\"files\"\n:\n{\n\"collect_list\"\n:\n[\n{\n\"file_path\"\n:\n\"/var/log/application1/*.log\"\n,\n\"log_group_name\"\n:\n\"/aws/application1\"\n,\n\"log_stream_name\"\n:\n\"{instance_id}-application1\"\n}\n,\n{\n\"file_path\"\n:\n\"/var/log/application2/*.log\"\n,\n\"log_group_name\"\n:\n\"/aws/application2\"\n,\n\"log_stream_name\"\n:\n\"{instance_id}-application2\"\n}\n]\n}\n}\n}\n}\nStore this configuration in Systems Manager Parameter Store:\naws ssm put-parameter\n\\\n--name\n\"AmazonCloudWatch-Config\"\n\\\n--type\n\"String\"\n\\\n--value file://config.json\nInstall and configure the CloudWatch agent on your instances:\n# Install the agent\nyum\ninstall\n-y amazon-cloudwatch-agent\n# Configure using the SSM parameter\n/opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl\n\\\n-a fetch-config\n\\\n-m ec2\n\\\n-s\n\\\n-c ssm:AmazonCloudWatch-Config\nUpdate your dashboard to include widgets from multiple log groups:\n{\n\"widgets\"\n:\n[\n{\n\"type\"\n:\n\"log\"\n,\n\"properties\"\n:\n{\n\"query\"\n:\n\"SOURCE '/aws/application1' | fields @timestamp, @message\"\n,\n\"region\"\n:\n\"us-east-1\"\n,\n\"title\"\n:\n\"Application 1 Logs\"\n}\n}\n,\n{\n\"type\"\n:\n\"log\"\n,\n\"properties\"\n:\n{\n\"query\"\n:\n\"SOURCE '/aws/application2' | fields @timestamp, @message\"\n,\n\"region\"\n:\n\"us-east-1\"\n,\n\"title\"\n:\n\"Application 2 Logs\"\n}\n}\n]\n}\nRemember to:\nEnsure proper IAM permissions for accessing multiple log groups\nUpdate retention policies as needed\nConsider costs when collecting logs from multiple sources\nUse log stream names that make sense for your use case\nI hope this is helpful. If yes, please upvote/accept my answer. Thank you."
}