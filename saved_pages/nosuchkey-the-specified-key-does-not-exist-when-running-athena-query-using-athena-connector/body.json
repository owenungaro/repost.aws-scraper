{
  "body": "I have the following query:\nMERGE INTO \"s3tablescatalog/my-s3-table-bucket\".ro_reporting.offers_dataset AS target\nUSING (\nselect vendor_id as advertiser_id, sum(cast(vs.sales as double)) as sales,\nsum(cast(vs.sales_same_seller as double)) as sales_same_seller, sum(cast(sales_count as double)) as sales_count,\nsum(cast(vs.sold_units as double)) as sold_units,\nCASE\nWHEN keyword_id IS NOT NULL THEN 'keywords'\nWHEN product_target_id IS NOT NULL THEN 'products' ELSE 'auto'\nEND AS targeting,\nc.campaign_id, c.adset_id, c.y, c.m, c.d, c.h\nfrom db.clicks c\ninner join db.valid_clicks_parquet vc on vc.request_id = c.click_id\ninner join db.valid_sales vs on vs.ref = c.bid_history_id\nwhere c.click_id in (\nselect distinct request_id from db.valid_clicks_parquet where y=2025 and m=5 and d in (3,4,5) \n)\nand c.y = 2025 and c.m=05 and c.d in (3,4,5) \nand vs.y = 2025 and vs.m=05 and vs.d = 4\ngroup by vendor_id, c.campaign_id, c.adset_id, CASE\nWHEN keyword_id IS NOT NULL THEN 'keywords'\nWHEN product_target_id IS NOT NULL THEN 'products' ELSE 'auto'\nEND, c.y, c.m, c.d, c.h \n) AS source\nON\ntarget.advertiser_id = source.advertiser_id AND\ntarget.campaign_id = source.campaign_id AND\ntarget.adset_id = source.adset_id AND\ntarget.targeting = source.targeting AND\ntarget.y = source.y AND\ntarget.m = source.m AND\ntarget.d = source.d AND\ntarget.h = source.h\nWHEN MATCHED THEN\nUPDATE SET\nseven_day_total_sales = 1005\nWhen i ran it from console, query runs successfully. Only when i use the package i encounter the following error:\n[ERROR] [AthenaConnector::query] Error: NoSuchKey: The specified key does not exist.\nI can ran an INSERT query in the s3 table, which leads me to believe it is not a matter of permissions.\nAlso, after running the query and checking the data, looks like the affected rows actually get updated.\nAny ideas how to debug this issue?\nLocally i use saml2aws credentials provider.\nClient we use for athena:\nhttps://www.google.com/search?q=athena-express-plus&oq=athena-express-plus&gs_lcrp=EgZjaHJvbWUyBggAEEUYOTIGCAEQABgeMgcIAhAAGO8FMgcIAxAAGO8FMgcIBBAAGO8FMgcIBRAAGO8F0gEHMjQ0ajBqN6gCALACAA&sourceid=chrome&ie=UTF-8\n\nThe \"NoSuchKey: The specified key does not exist\" error you're encountering when running your Athena query through the athena-express-plus package (but not in the console) is likely related to S3 consistency or temporary storage issues with the Athena connector.\nBased on similar issues, here are some potential causes and solutions:\nS3 Spill Bucket Configuration\n: The Athena connector might be trying to access a temporary storage location in S3 that doesn't exist or that your Lambda function doesn't have proper permissions to access. Check if your connector has a properly configured \"spill_bucket\" environment variable that points to a valid S3 bucket (using just the bucket name, not the full path).\nIAM Permissions\n: Ensure your Lambda function or the role used by your client has the necessary S3 permissions including:\ns3:GetObject\ns3:ListBucket\ns3:GetBucketLocation\ns3:PutObject\ns3:PutObjectAcl\ns3:GetLifecycleConfiguration\ns3:PutLifecycleConfiguration\ns3:DeleteObject\nS3 Eventual Consistency\n: S3 uses an eventual consistency model for some operations. When your query runs, it might be trying to access objects that were recently created but not yet fully available across all availability zones. This could explain why retrying the operation works and why the data appears to be updated despite the error.\nGlue Data Catalog Permissions\n: If you're using AWS Glue as your data catalog, ensure your role has the necessary Glue permissions (like glue:Get*).\nSince you mentioned the data is actually getting updated despite the error, this suggests the query is executing but there might be an issue with retrieving the results or with some post-processing step.\nTo debug this issue:\nAdd more detailed error logging in your code\nCheck CloudWatch logs if you're using Lambda\nVerify all S3 bucket permissions\nTry adding a small delay before retrieving results to account for potential S3 consistency issues\nSources\nCommunity | Now You See Me, Now You Don't - the Mystery of the Vanishing S3 Objects\nAccess, query, and join Amazon DynamoDB tables using Athena - AWS Prescriptive Guidance\nAthena Query Error using Python | AWS re:Post\n\ni am not using lambda for this, i am running this from a local script.\nHow can i wait for the retrieval of the results since this is just a MERGE query? what result is it retrieving?\n\nAfter some digging, the issue was indeed an eventual consistency problem. The error would come from this line in the athena-express sdk:\nconst queryResultsFromS3 = await helpers.getQueryResultsFromS3(                         {                             s3Output,                             statementType,                             config,                         }                     );\nthis was returning a 404 on the response.\nafter setting skipResults option to true, the error did not persist."
}