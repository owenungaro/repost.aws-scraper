{
  "body": "Issue Description\nI am experiencing an issue with my Amazon RDS instance and need assistance to resolve it. The database is currently in the \"Inaccessible-encryption-credentials-recoverable\" status, preventing me from connecting to it or restoring its functionality.\nRDS Instance Details\nDB Identifier: tur........\nEngine: PostgreSQL\nClass: db.t4g.micro\nRegion & AZ: eu-north-1c\nVPC: vpc-022b.............\nSecurity Group: sg-0b4d.......... (Active)\nPublicly Accessible: Yes\nCurrent Status: Inaccessible-encryption-credentials-recoverable\nBackground\nI have been informed by AWS T\u00fcrkiye that this status occurs when the RDS instance loses access to the KMS key used for encryption. They suggested using the AWS CLI command\nstart-db-instance\nto attempt recovery, as the AWS Management Console cannot be used in this state. However, I would prefer to proceed with guidance to ensure the process is handled correctly and to avoid any risk of data loss.\nI have also been advised that the instance will remain in this recoverable state for 7 days (likely starting around May 25, 2025), after which it will transition to a terminal state, requiring restoration from a snapshot. This database is critical for my application running on an EC2 instance (IP: 16.16.213.90), so I need to resolve this issue urgently.\nAdditional Information\nI have encountered a DNS resolution issue on my EC2 instance (\"Name or service not known\" when attempting to connect to the RDS endpoint). I am working on resolving this, but I mention it in case it is relevant to the recovery process.\nRequest for Assistance\nCould you please help with the following:\nVerify the status of the KMS key associated with this RDS instance and assist in restoring access if possible.\nGuide me through the recovery process using the\nstart-db-instance\ncommand or suggest alternative steps.\nIf recovery is not possible, advise on the best way to restore the database from a snapshot without data loss.\nI would appreciate your prompt assistance, as the 7-day recovery window is time-sensitive (today is May 26, 2025, 18:36 +03). I can provide additional details, such as CLI outputs or logs, if needed.\nThank you for your support!\n\nHello Alex,\nYes, the problem you're facing \u2014 RDS instance in\n\u201cInaccessible-encryption-credentials-recoverable\u201d\nstatus \u2014 is\ndirectly related\nto encryption key issues and\ncan be addressed using the guidance in the two AWS links\nyou've shared, particularly the first one.\nHere is a\nconcise and community-friendly answer\nyou can use, following AWS re:Post guidelines:\nAnswer: RDS Instance in \"Inaccessible-encryption-credentials-recoverable\" Status\nThis issue typically occurs when the Amazon RDS instance loses access to the AWS KMS key used to encrypt the database. The instance becomes temporarily inaccessible, but\nrecoverable within 7 days\nif the KMS key issue is resolved.\nRecommended Actions:\nVerify the KMS key status:\nGo to\nAWS KMS Console\n> Select the key used for the RDS instance.\nEnsure the key is\nenabled\nand not\nscheduled for deletion\n.\nCheck that the key policy allows access to the RDS service.\nRestore Access to the RDS Instance:\nOnce the KMS key is re-enabled or access is restored, run the following CLI command to restart the DB:\naws rds start-db-instance --db-instance-identifier your-db-instance-id\nYou can monitor the status via:\naws rds describe-db-instances --db-instance-identifier your-db-instance-id\nAlternative (if key access cannot be restored):\nRestore the database from the latest snapshot to a new instance using a valid, accessible KMS key.\nImportant:\nThe instance remains recoverable only for 7 days after entering this state. After that, the only option is restoring from backup/snapshot.\nReferences:\nAWS re:Post \u2013 RDS in Inaccessible State\nAmazon RDS Encryption Documentation\n\nThe issue with the RDS instance in the \"\nInaccessible-encryption-credentials-recoverable\n\" state is tied to a loss of access to the KMS key used for encryption. This state indicates that either the KMS key was disabled, deleted, or its access permissions revoked. The first step to resolve this is to navigate to the AWS KMS settings and verify the status of the associated key. The key should be set to \"Enabled\" and retain permissions that allow the RDS instance to decrypt and access its data. Additionally, ensure that the IAM role linked to the RDS instance has policies allowing actions such as 'kms:Decrypt', 'kms:Encrypt', and 'kms:DescribeKey'.\nIf the KMS key is intact and correctly configured, the recovery of the database instance can be initiated via the AWS CLI. Using the 'start-db-instance' command on the affected DB identifier should allow the service to restore access. The progress of this recovery should be monitored through the 'describe-db-instances' CLI command to ensure the instance transitions back to an \"Available\" state.\nIn the event that the recovery fails, the database can be restored from its most recent available snapshot. Identifying the latest snapshot through the AWS CLI and restoring it into a new RDS instance ensures minimal data loss. Application configurations, such as the connection endpoint, will need to be updated to reflect the new database instance.\nAdditionally, the DNS resolution issue encountered on the associated EC2 instance may not be directly related but is critical to address. Review the network configurations, specifically DNS settings in the EC2's 'resolv.conf' file, and ensure traffic to port 53 is not restricted by the security group. Properly resolving DNS ensures seamless communication between the application and the database.\nTo prevent future occurrences, it is advisable to maintain regular snapshots for disaster recovery, monitor the health of KMS keys, and ensure IAM permissions remain intact to access encryption credentials. Proper planning around resource management will reduce downtime and ensure the continuity of critical database operations."
}