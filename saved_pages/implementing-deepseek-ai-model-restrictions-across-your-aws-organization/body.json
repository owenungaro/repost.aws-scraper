{
  "body": "This article explores how organizations can implement solutions for robust controls for DeepSeek AI models across their organization. Specifically, this article explains how to have granular control over which teams can access models, and how to monitor model capabilities for responsible use.\n\nIntroduction\nIn the rapidly evolving landscape of AI, many organizations face the challenge of using cutting-edge AI models while maintaining strict regulatory compliance.\nAccording to the company's\nprivacy policy\non the DeepSeek website, DeepSeek collects user data and can store the data on servers in China. This policy applies to direct API access, the IOS app, and the Android app. Because of this policy, many customers have concerns about the privacy of their data on DeepSeek models.\nNote:\nStandalone DeepSeek-R1 model functions are independent from DeepSeek's data collection systems and locally process data. This approach provides privacy and control for users over their confidential data.\nIn your AWS environment, you can use the following methods to deploy DeepSeek-R1 models:\nAmazon Bedrock Marketplace\nfor the DeepSeek-R1 model\nAmazon SageMaker JumpStart\nfor the DeepSeek-R1 model\nAmazon Bedrock Custom Model Import\nfor the DeepSeek-R1-Distill models\nAmazon Elastic Compute Cloud (Amazon EC2) Trn1 instances\nfor the DeepSeek-R1-Distill models\nControl access to DeepSeek models\nTo control access to DeepSeek models that you deploy through Amazon Bedrock and Amazon SageMaker AI, use the following solutions.\nNote:\nThese solutions don't apply to custom-imported DeepSeek models or DeepSeek models that directly run on Amazon EC2 instances.\nImplement SCPs\nTo control access to a model, you can implement Service Control Policies (SCPs) at the following levels:\nIndividual accounts\nOrganizational Units (OU)\nAcross an AWS Organizations structure\nRemove access to Amazon Bedrock foundation models\nDeepSeek is available directly as a foundation model in Amazon Bedrock. You can\ndeny invoking the model in Amazon Bedrock\n.\nExample policy:\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": {\n        \"Sid\": \"DenyInference\",\n        \"Effect\": \"Deny\",\n        \"Action\": [\n            \"bedrock:InvokeModel\",\n            \"bedrock:InvokeModelWithResponseStream\",\n            \"bedrock:CreateModelInvocationJob\"\n        ],\n        \"Resource\": \"arn:aws:bedrock:*::foundation-model/model-id\"\n    }\n}\nTo create ALLOW or DENY SCPs for Amazon Bedrock and SageMaker AI, complete the following tasks:\nIf you use FullAWSAccess and have explicit DENY SCPs, then use the following example policy:\n{\n\t\"Version\": \"2012-10-17\",\n\t\"Statement\": [\n\t\t{\n\t\t\t\"Sid\": \"MarketplaceModelDeny\",\n\t\t\t\"Effect\": \"Deny\",\n\t\t\t\"Action\": [\n\t\t\t\t\"sagemaker:*\",\n\t\t\t\t\"bedrock:*\"\n\t\t\t],\n\t\t\t\"Resource\": [\n\t\t\t\t\"arn:aws:sagemaker:*:*:endpoint/*\",\n\t\t\t\t\"arn:aws:sagemaker:*:*:endpoint-config/*\",\n\t\t\t\t\"arn:aws:sagemaker:*:*:model/*\"\n\t\t\t],\n\t\t\t\"Condition\": {\n\t\t\t\t\"StringLike\": {\n\t\t\t\t\t\"aws:ResourceTag/sagemaker-studio:hub-content-arn\": \"arn:aws:sagemaker:*:aws:hub-content/SageMakerPublicHub/Model/deepseek*\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t]\n}\nIf you use explicit ALLOW SCPs, then use the following example policy:\n{\n\t\"Version\": \"2012-10-17\",\n\t\"Statement\": [\n\t\t{\n\t\t\t\"Sid\": \"MarketplaceModelEndpointMutatingAPIs\",\n\t\t\t\"Effect\": \"Allow\",\n\t\t\t\"Action\": [\n\t\t\t\t\"sagemaker:CreateEndpoint\",\n\t\t\t\t\"sagemaker:CreateEndpointConfig\",\n\t\t\t\t\"sagemaker:CreateModel\",\n\t\t\t\t\"sagemaker:DeleteEndpoint\",\n\t\t\t\t\"sagemaker:UpdateEndpoint\"\n\t\t\t],\n\t\t\t\"Resource\": [\n\t\t\t\t\"arn:aws:sagemaker:*:*:endpoint/*\",\n\t\t\t\t\"arn:aws:sagemaker:*:*:endpoint-config/*\",\n\t\t\t\t\"arn:aws:sagemaker:*:*:model/*\"\n\t\t\t],\n\t\t\t\"Condition\": {\n\t\t\t\t\"StringEquals\": {\n\t\t\t\t\t\"aws:CalledViaLast\": \"bedrock.amazonaws.com\",\n\t\t\t\t\t\"aws:ResourceTag/sagemaker-sdk:bedrock\": \"compatible\"\n\t\t\t\t},\n\t\t\t\t\"StringNotLike\": {\n\t\t\t\t\t\"aws:ResourceTag/sagemaker-studio:hub-content-arn\": \"arn:aws:sagemaker:*:aws:hub-content/SageMakerPublicHub/Model/deepseek*\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"Sid\": \"SageamkerModelEndpointMutatingAPIs\",\n\t\t\t\"Effect\": \"Allow\",\n\t\t\t\"Action\": [\n\t\t\t\t\"sagemaker:CreateEndpoint\",\n\t\t\t\t\"sagemaker:CreateEndpointConfig\",\n\t\t\t\t\"sagemaker:CreateModel\",\n\t\t\t\t\"sagemaker:DeleteEndpoint\",\n\t\t\t\t\"sagemaker:UpdateEndpoint\"\n\t\t\t],\n\t\t\t\"Resource\": [\n\t\t\t\t\"arn:aws:sagemaker:*:*:endpoint/*\",\n\t\t\t\t\"arn:aws:sagemaker:*:*:endpoint-config/*\",\n\t\t\t\t\"arn:aws:sagemaker:*:*:model/*\"\n\t\t\t],\n\t\t\t\"Condition\": {\n\t\t\t\t\"StringEquals\": {\n\t\t\t\t\t\"aws:CalledViaLast\": \"sagemaker.amazonaws.com\",\n\t\t\t\t\t\"aws:ResourceTag/sagemaker-sdk:bedrock\": \"compatible\"\n\t\t\t\t},\n\t\t\t\t\"StringNotLike\": {\n\t\t\t\t\t\"aws:ResourceTag/sagemaker-studio:hub-content-arn\": \"arn:aws:sagemaker:*:aws:hub-content/SageMakerPublicHub/Model/deepseek*\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t]\n}\nRestrict access to subscription to marketplace models\nNote:\nThis solution denies access to other model subscriptions.\nBefore you can request access or modify access to Amazon Bedrock foundation models, you must attach an AWS Identity and Access Management (IAM) policy. Attach the policy to the IAM role that allows access to Amazon Bedrock, and make sure that the policy allows the following\nAWS Marketplace actions\n:\naws-marketplace:Subscribe\naws-marketplace:Unsubscribe\naws-marketplace:ViewSubscriptions\nBased on your organization's need to control access to model subscriptions, you can create additional SCPs.\nEstablish a\u00a0SageMaker JumpStart private model hub\nIn SageMaker JumpStart, you can create a curated repository of\napproved models in private hubs\n. Organizations can use these private hubs to align their AI initiatives with corporate policies and regulatory requirements. The private hub decouples model curation from model consumption. With this separation, administrators can manage the model inventory, and data scientists can develop AI solutions. For more information on private hubs, see\nManage Amazon SageMaker JumpStart foundation model access with private hubs\n.\nMonitor your solutions\nTo monitor your solutions, use one of the following options:\nAWS CloudTrail logs\nAmazon SageMaker Model dashboard\nAmazon CloudWatch Logs\nFor detailed insights, administrators can use specific parameters to query consolidated CloudTrail logs. For example, you can use\nsagemaker.amazonaws.com\nas the eventSource, and\nCreateModel\nas the eventName to query the logs.\nYou can also use resource tags like\n%deepseek%\nor Model S3uri, such as\n%deepseek%\nto query.\nExample CloudTrail Lake query:\nSELECT *\nFROM #########\nWHERE eventname = 'CreateModel'\n\u00a0\u00a0\u00a0 AND eventsource = 'sagemaker.amazonaws.com'\n\u00a0\u00a0\u00a0 AND (\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 element_at(requestParameters, 'primaryContainer') like '%deepseek%'\n\u00a0\u00a0\u00a0 )\n\u00a0\u00a0\u00a0 AND eventtime >= '2025-02-13 00:00:00'\n\u00a0\u00a0\u00a0 AND eventtime <= '2025-02-14 23:00:00';\nUse AI responsibly\nAmazon Bedrock delivers enterprise-level security features that protect your data and applications. Amazon Bedrock keeps your information confidential, and doesn't share the information with model providers or use the information to improve models. Model containers undergo vulnerability scanning. Additionally, Amazon Bedrock Serverless and Amazon Bedrock Marketplace both force network isolation to prevent unauthorized egress of customer data from model containers.\nTo safely build generative AI applications at scale,\nAmazon Bedrock Guardrails\nuses content filtering, Personally Identifiable Information (PII) redaction, and enhanced safety and privacy measures. You can customize policies to meet specific needs and responsible AI standards. These policies can include the following actions:\nBlock unwanted topics\nFilter specific content and words\nRemove PII\nConduct contextual grounding checks\nIdentify AI hallucinations\nAWS facilitates robust security and compliance in its AI services through built-in safeguards in Amazon Bedrock and SageMaker AI. These safeguards include the following:\nEncryption to protect data, both at rest and in transit\nAccess management through IAM\nNetwork security with Amazon Virtual Private Cloud (Amazon VPC) and\nAWS PrivateLink\nSecurity groups and network access control lists (network ACLs) to restrict access\nCloudWatch and CloudTrail to monitor\nAmazon Bedrock performance\nand\nAmazon Bedrock API calls\n.\nConclusion\nThis article demonstrates how to restrict DeepSeek models to follow best practices for the security of your data across your organization.\nTo get the most out of your AWS environment, contact AWS Cloud Support Engineers and Technical Account Managers (TAMs). They can help you with general guidance, best practices, troubleshooting, and operational support on AWS. To learn more about our plans and offerings, see\nAWS Support\n. To learn more about the suggested solution, contact your TAM or AWS account team.\nAbout the author\nMojgan Toth\nMojgan is a Sr. Cloud TAM who proactively supports customers with strategic technical guidance and AWS cloud best practices. She loves putting together solutions around well-architecture framework, security, and resiliency. Her passion lies in solving problems, enhancing efficiency, and reducing operational overhead. When it comes to her personal life, she loves cooking, painting, gardening, and outdoor activities such as bike rides and hikes."
}